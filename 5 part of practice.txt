1. Что подразумевается под тестовой средой?

      Тестовая среда делится на:
      
      Среда разработки - в ней разработчики пишут код, проводят отладку, исправляют ошибки, выполняют unit-тестирование. За эту среду так же отвечают разработчики.
      
      Среда тестирования - в этой среде работают тестировщики. Тут тестируются новые билды. Здесь проверяют функционал, проводят регрессионные проверки, воспроизводят ошибки. Эта среда появляется во время начала динамического тестирования. 
      
      Интеграционная среда - иногда реализована в рамках среды тестирования, а иногда в рамках первью среды. В этой среде собрана необходимая для end-to-end тестирования схема взаимодействующих друг с другом модулей, систем,продуктов. Сообсвенно, необходима она для интеграционного тестирования. 
      
      Превью среда - в идеале, эта среда идентичная или максимально приближенная к продуктивной: те же данные, то же аппаратно-программное окружение, та же производительность. Она используется, чтобы сделать финальную проверку ПО в условиях максимально приближенным к "боевым". Здесь тестировщики проводят заключительное end-to-end тестирвание функцинала, бизнес и пользоатели проводят UAT, а команды поддержки L3 и L2 выполняют DryRun (пробную установку релиза). Как правило за эту среду отечает группа L3 поддержки.
      
      Продакшн среда - среда, в которой работают пользователи. С этой средоой работает команда L2 поддержки, устанавливая поставки ПО или патчи с исправлениями, выполняя настройки, отвечая за работоспособность всех систем. Инциденты и проблемы требующие исправления ПО передаются в работу команде L3.
      
      В общем случае среда тестирования - это настройка программного и аппаратного обеспечения для тестирования.
      
---------------------------------------------------------------------------------------------

2. В чем отличие build от release?

       Build (сборка) - это номер, даваемый ПО при передаче от разработчиков тестировщикам.
       
       Release - это номер, даваемый ПО при передаче конечному пользователю.
       
----------------------------------------------------------------------------------------------

3. Основные фазы тестирования?

    1)  Pre-Alpha - ПО является прототипом. Пользовательский интерфейс завершен. Но не все функции завершены. На данном этапе ПО не публикуется.
    
    2)  Alpha - является ранней версией программного продукта. Цель - вовлечь клиента в процесс разработки. Хороший Альфа-тест должен иметь четко определенный план тестирования с комплексными тестовыми примерами. Это дает лучшее представление о надежности программного обеспечения на ранних стадиях. В некоторых случаях тестирование может быть передано на аутсорос.
    
    3)  Beta: ПО стабильно и выпускается для ограниченной пользовательской базы. Цель состоит в том, что бы получить отзывы клиентов о продукте и внести соответсвующие изменения в ПО.
    
    4)  Release Candidate (RC): основываясь на отзывах Beta test, вы вностите изменения в ПО и хотите проверить исправления ошибок. На этом этапе вы нехотите вносить радикальные изменения в функциональность, а просто проверяете наличие ошибок. RC также выпущен для общественности.
    
    5)  Release: Все работает, ПО выпущено для общественности.
    
-----------------------------------------------------------------------------------------------

4. Что такое импакт анализ?

       Это указание затронутых мест в проекте при разработке новой или изменении старой функциональности.
       
------------------------------------------------------------------------------------------------

5. Критерии выбора тестов?

       Критерий должен быть достаточным , т.е. показывать, когда некоторое конечное множество тестов достаточно для тестирования данной программы.
       
       Критерий должен быть полным , т.е. в случае ошибки должен существовать тест из множества тестов, удовлетворяющих критерию, который раскрывает ошибку.
       
       Критерий должен быть надежным , т.е. любые два множества тестов, удовлетворяющих ему, одновременно должны раскрывать или не раскрывать ошибки программы.
       
       Критерий должен быть легко проверяемым , например вычисляемым на тестах.
       
-----------------------------------------------------------------------------------------------------

6. Принципы тестирования?

    1) Тестирование показывает наличие дефектов.
    
    2) Исчерпывающее тестирование невозможно.
    
    3) Раннее тестирование.
    
    4) Скопление дефектов.
    
    5) Парадокс пестицида.
    
    6) Тестирование зависит от контекста.
    
    7) Заблуждение от отсутсвия дефектов.
    
--------------------------------------------------------------------------------------------------

7. Что такое независимое тестирование?

       Это тестирование ПО, отдельно нанятыми людьми, никак не причастными к разработке и тестированию.
       
----------------------------------------------------------------------------------------------------

8. Что такое тестирование со сдвигом влево?

       Идея "сдвига влево" в том, что тестирование должно больше сдвигаться к началу (и продолжаться до завершения) цикла разработки.
       
-----------------------------------------------------------------------------------------------------

9. Почему тестирование делится на отдельные этапы?
10. Какие есть этапы тестирования?
11. Как вы тестируете продукт, если требования еще не зафиксированы?
12. Как вы узнаете, было ли создано достаточно тестов для тестирования продукта?
13. Что подразумевается под тестовыми данными?
14. Что такое бета-тестирование?
15. Что означает пилотное тестирование? (Pilot)

--------------------------------------------------------------------------------------------------------
16. В чем отличие build от release?

       Build (сборка) - это номер, даваемый ПО при передаче от разработчиков тестировщикам.
       
       Release - это номер, даваемый ПО при передаче конечному пользователю.
       
---------------------------------------------------------------------------------------------------

17. Что такое бизнес – логика?

       Это то,что конкретная программа по задумке должна сделать. Например, в складской программе проверка на возможность отправить товар (вдруг его нет в наличии). Эти правила, которые должны соблюдаться в даной конкретной программе, определенные бизнес-клиентом. Слои преложения, слой пользовательского интерфейса, слой бизнес логики, слой созранения данных.
    
------------------------------------------------------------------------------------------------------------------
18. Какие существуют основные виды тестирования ПО?
19. Методы тестирования?
20. Что такое пирамида / уровни тестирования?
21. Что такое деструктивное/разрушающее/негативное тестирование? (DT — Destructive testing)
22. Что такое недеструктивное/неразрушающее/позитивное тестирование? (NDT – Non Destructive testing)
23. Что подразумевается под компонентным/модульным/юнит тестированием? (Component/Module/Unit testing)
24. Что подразумевается под интеграционным тестированием?
25. Разница между Unit testing и Integration testing?
26. Что такое системное интеграционное тестирование? (SIT — System Integration testing) 
27. В чем разница между тест-драйвером и тест-заглушкой? (Test Driver and Test Stub)
28. Что подразумевается под системным тестированием?
29. Что такое функциональное тестирование?
   Проверяем,что весь функционал соответствует требованиям заказчика.
--------------------------------------------------------------------------------------------------------

30. Что такое тестирование совместимости/взаимодействия? (Compatibility/Interoperability testing)

31. Что такое тестирование на соответствие? (Conformance/Compilance testing)
32. Что такое нефункциональное тестирование?
33. Что вы знаете о Тестировании удобства пользования?
34. Отличия тестирование на удобство пользования и тестирования доступности? (Usability Vs. Accessibility testing)
35. Что такое тестирование интерфейса?
36. Что такое тестирование рабочего процесса/воркфлоу? (Workflow testing)
37. Что вы знаете о пользовательском приемочном тестировании? (UAT – User Acceptance testing)

Пользовательское приемочное тестирование (UAT) - это тип тестирования, выполняемый конечным пользователем или клиентом для проверки / принятия ПО перед его перемещением в production. UAT выполняется на заключительном этапе тестирования после выполнения функциональных, интеграционных и системных испытаний. Основной целью UAT является проверка end-to-end business flow. Он не фокусируется на косметических ошибках, орфографических ошибках или тестировании системы. Приемочное тестирование пользователя выполняется в отдельной среде тестирования с настройкой данных, аналогичных производственным. Это своего рода тестирование черного ящика, в котором будут участвовать два или более конечных пользователя. Этапы:
-Анализ бизнес-требований 
-Создать плана тестирования UAT 
-Определить Test Scenario 
-Создать Test case UAT 
-Подготовить Test Data (Production like Data) 
-Запустить Test case
-Записать результаты
-одтвердить бизнес-цели
---------------------------------------------------------------------------------------------------------------
38. Что такое эксплуатационное приемочное тестирование? (OAT — Operational Acceptance testing)
39. Что такое инсталляционное тестирование?
40. Что вы знаете о тестировании безопасности?
41. Что такое конфигурационное тестирование?
42. Объясните, что такое тестирование N+1
43. Что вы знаете о тестировании сборки? (Build Verification Test)
44. Что такое тестирование потоков? (Thread testing)
45. Что вы знаете о мутационном тестировании? (Mutation testing)
46. В чем разница между Baseline и Benchmark testing?
47. Что такое A/B тестирование?
48. Что означает сквозное тестирование? (E2E — End–to–End)
49. В чем разница между E2E и системным тестированием?
50. Что такое параллельное тестирование? (Parallel testing)
51. Чем AdHock тестирование отличается от Исследовательского тестирования?

